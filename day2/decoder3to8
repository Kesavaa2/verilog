module  decoder3to8 ( 
input [2:0] D, 
output reg [7:0] y); 
always @(D) begin 
case(D) 
3'b000: y[0] = 1'b1; 
3'b001: y[1] = 1'b1; 
3'b010: y[2] = 1'b1; 
3'b011: y[3] = 1'b1; 
3'b100: y[4] = 1'b1; 
3'b101: y[5] = 1'b1; 
3'b110: y[6] = 1'b1; 
3'b111: y[7] = 1'b1; 
default: y = 0; 
endcase 
end 
endmodule

module decoder3to8_tb;

reg [2:0] D;
wire [7:0] y;

// Instantiate the 3-to-8 decoder
decoder3to8 uut (
    .D(D),
    .y(y)
);

initial begin
 
    // Initialize the sel signal and observe the output for different values
    D = 3'b000; #10;
    D = 3'b001; #10;
    D = 3'b010; #10;
    D = 3'b011; #10;
    D = 3'b100; #10;
    D = 3'b101; #10;
    D = 3'b110; #10;
    D = 3'b111; #10;
    
  
end

initial begin
    $monitor("At time %0t: D = %b, y = %b", $time, D, y);
end

endmodule
